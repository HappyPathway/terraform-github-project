name: Test Examples

on:
  push:
    branches: [ main ]
    paths:
      - 'examples/**'
      - '.github/workflows/test-examples.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'examples/**'
      - '.github/workflows/test-examples.yml'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_ORG: ${{ vars.GITHUB_ORG }}

jobs:
  test-examples:
    name: Test Example ${{ matrix.example }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        example:
          - minimal
          - multi-repo
          - infrastructure

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.0"

      - name: Setup Git Config
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Create Terraform Variables
        working-directory: examples/${{ matrix.example }}
        run: |
          cat > terraform.tfvars <<EOF
          repo_org = "$GITHUB_ORG"
          project_name = "example-${{ matrix.example }}"
          project_prompt = "Example project for testing ${{ matrix.example }} configuration"
          EOF

      - name: Initialize Terraform
        working-directory: examples/${{ matrix.example }}
        run: terraform init

      - name: Plan Terraform Changes
        working-directory: examples/${{ matrix.example }}
        run: terraform plan

      - name: Apply Terraform Changes
        working-directory: examples/${{ matrix.example }}
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve